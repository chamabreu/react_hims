/* Imports */
import { BulkSolidFormStateContext, BulkSolidFormDispatchContext } from './BulkSolidForm'
import { Col, Form, Row } from "react-bootstrap";
import { useContext } from "react";


/* field IDs used as html id=xxx */
enum FieldIDs {
  bulkSolidID = "bulkSolidID",
  pictureFile = "pictureFile",
  note = "note",
  msdsFile = "msdsFile",
  msds = "msds",
  exprotection = "exprotection",
  enteredBy = "enteredBy",
  description = "description",
  density = "density",
  casNumber = "casNumber",
  bulkSolidShape = "bulkSolidShape",
  arrivalDate = "arrivalDate",
  aID = "aID"
}


/* Component to render all input fields */
export default function BulkSolidFields() {
  /* Deconstruct all states for the input fields from Context */
  const {
    bulkSolidID,
    note,
    msds,
    exprotection,
    enteredBy,
    description,
    density,
    casNumber,
    bulkSolidShape,
    arrivalDate,
    aID
  } = useContext(BulkSolidFormStateContext)


  /* get the dispatch handler to handle onChange events */
  const changeHandler = useContext(BulkSolidFormDispatchContext)

  return (
    <>

      {/* Bulk solid ID autogenerated by database */}
      <Form.Group as={Row} controlId={FieldIDs.bulkSolidID}>
        <Form.Label column lg={2}>Bulk solid ID (autofilled)</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="Bulk solid ID"
            value={bulkSolidID}
            readOnly
            required
          />
        </Col>
      </Form.Group>



      {/* Description of goods */}
      <Form.Group as={Row} controlId={FieldIDs.description}>
        <Form.Label column lg={2}>Description *</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="Description"
            value={description}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.description, payload: e.target.value })}
            required
          />
        </Col>
      </Form.Group>



      {/* MSDS Security sheet available */}
      <Form.Group as={Row} controlId={FieldIDs.msds}>
        <Form.Label column lg={2}>MSDS *</Form.Label>
        <Col>
          <Form.Check
            type="checkbox"
            label="Safety datasheet available"
            checked={msds}
            onChange={_ => changeHandler({ type: "checkBox", fieldID: FieldIDs.msds, payload: !msds })}
          />
        </Col>
      </Form.Group>




      {/* Explosion protection required */}
      <Form.Group as={Row} controlId={FieldIDs.exprotection} >
        <Form.Label column lg={2}>Ex-Protection *</Form.Label>
        <Col>
          <Form.Check
            type="checkbox"
            label="Explosion protection required"
            checked={exprotection}
            onChange={_ => changeHandler({ type: "checkBox", fieldID: FieldIDs.exprotection, payload: !exprotection })}
          />
        </Col>
      </Form.Group>



      {/* Arrival Date */}
      <Form.Group as={Row} controlId={FieldIDs.arrivalDate} >
        <Form.Label column lg={2}>Bulk arrival *</Form.Label>
        <Col>
          <Form.Control
            type="date"
            value={arrivalDate}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.arrivalDate, payload: e.target.value })}
            required
          />
        </Col>
      </Form.Group >



      {/* Notes textarea */}
      <Form.Group as={Row} controlId={FieldIDs.note}>
        <Form.Label column lg={2}>Note *</Form.Label>
        <Col>
          <Form.Control
            as="textarea"
            placeholder="Delivered quantity, bundle, size, etc.."
            value={note}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.note, payload: e.target.value })}
            required
          />
        </Col>
      </Form.Group>




      {/* A-ID */}
      <Form.Group as={Row} controlId={FieldIDs.aID} >
        <Form.Label column lg={2}>A-ID</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="A-ID"
            value={aID}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.aID, payload: e.target.value })}
          />
        </Col>
      </Form.Group>



      {/* CAS Number */}
      <Form.Group as={Row} controlId={FieldIDs.casNumber} >
        <Form.Label column lg={2}>CAS-Number</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="CAS"
            value={casNumber}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.casNumber, payload: e.target.value })}
          />
        </Col>
      </Form.Group>




      {/* Density */}
      <Form.Group as={Row} controlId={FieldIDs.density} >
        <Form.Label column lg={2}>Density</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="Density"
            value={density}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.density, payload: e.target.value })}
          />
        </Col>
      </Form.Group>




      {/* Shape of bulk solid */}
      <Form.Group as={Row} controlId={FieldIDs.bulkSolidShape} >
        <Form.Label column lg={2}>Bulk solid shape</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="Powder, granular, grain, fiber, flakes"
            value={bulkSolidShape}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.bulkSolidShape, payload: e.target.value })}
          />
        </Col>
      </Form.Group>




      {/* MSDS File Upload */}
      <Form.Group as={Row} controlId={FieldIDs.msdsFile} >
        <Form.Label column lg={2}>Upload MSDS</Form.Label>
        <Col>
        <Form.Control
            type="file"
            multiple={false}
            accept=".jpg, .jpeg, .png"

            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
              const uploadedMsdsFile = e.target.files ? e.target.files[0] : undefined

              if (uploadedMsdsFile) {
                changeHandler({ type: "msdsUpload", fieldID: FieldIDs.msdsFile, payload: uploadedMsdsFile})
              }else {
                changeHandler({ type: "msdsUpload", fieldID: FieldIDs.msdsFile, payload: undefined})
              }
            }}

          />
        </Col>
      </Form.Group >



      {/* Picture File Upload */}
      <Form.Group as={Row} controlId={FieldIDs.pictureFile} >
        <Form.Label column lg={2}>Upload Picture</Form.Label>
        <Col>
          <Form.Control
            type="file"
            multiple={false}
            accept='.pdf, .png, .jpg, .jpeg'
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
              const uploadedImage = e.target.files ? e.target.files[0] : undefined

              if (uploadedImage) {
                changeHandler({ type: "pictureUpload", fieldID: FieldIDs.pictureFile, payload: uploadedImage})
              }else {
                changeHandler({ type: "pictureUpload", fieldID: FieldIDs.pictureFile, payload: undefined})
              }
            }}

          />
        </Col>
      </Form.Group >



      {/* Editor Name enteredBy */}
      <Form.Group as={Row} controlId={FieldIDs.enteredBy}>
        <Form.Label column lg={2}>Your Name *</Form.Label>
        <Col>
          <Form.Control
            type="text"
            placeholder="Your Name"
            value={enteredBy}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => changeHandler({ type: "textField", fieldID: FieldIDs.enteredBy, payload: e.target.value })}
            required
          />
        </Col>
      </Form.Group>


    </>


  )
};


